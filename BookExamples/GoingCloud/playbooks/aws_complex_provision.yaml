---
- hosts: localhost
  tasks:
  - name: Gather information of the EC2 VPC net in eu-west-1
    ec2_vpc_net_facts:
      region: eu-west-1
    register: aws_simple_net
  - name: Gather information of the EC2 VPC subnet in eu-west-1
    ec2_vpc_subnet_facts:
      region: eu-west-1
      filters:
        vpc-id: '{{ aws_simple_net.vpcs.0.id }}'
    register: aws_simple_subnet
  - name: Ensure wssg Security Group is present
    ec2_group:
      name: wssg
      description: Web Security Group
      region: eu-west-1
      vpc_id: '{{ aws_simple_net.vpcs.0.id }}'
      rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
    register: aws_simple_wssg
  - name: Ensure dbsg Security Group is present
    ec2_group:
      name: dbsg
      description: DB Security Group
      region: eu-west-1
      vpc_id: '{{ aws_simple_net.vpcs.0.id }}'
      rules:
      - proto: tcp
        from_port: 3036
        to_port: 3036
        group_id: '{{ aws_simple_wssg.group_id }}'
      rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
    register: aws_simple_dbsg
  - name: Setup instances
    ec2:
      assign_public_ip: '{{ item.assign_public_ip }}'
      image: ami-7abd0209
      region: eu-west-1
      exact_count: 1
      key_name: fale
      count_tag:
        Name: '{{ item.name }}'
      instance_tags:
        Name: '{{ item.name }}'
      instance_type: t2.micro
      group_id: '{{ item.group_id }}'
      vpc_subnet_id: '{{ item.vpc_subnet_id }}'
      volumes:
        - device_name: /dev/sda1
          volume_type: gp2
          volume_size: 10
          delete_on_termination: True
    register: aws_simple_instances
    with_items:
    - name: ws01.simple.aws.fale.io
      group_id: '{{ aws_simple_wssg.group_id }}'
      assign_public_ip: True
      vpc_subnet_id: '{{ aws_simple_subnet.subnets.0.id }}'
    - name: ws02.simple.aws.fale.io
      group_id: '{{ aws_simple_wssg.group_id }}'
      assign_public_ip: True
      vpc_subnet_id: '{{ aws_simple_subnet.subnets.1.id }}'
    - name: db01.simple.aws.fale.io
      group_id: '{{ aws_simple_dbsg.group_id }}'
      assign_public_ip: False
      vpc_subnet_id: '{{ aws_simple_subnet.subnets.0.id }}'
  - name: Add route53 rules for instances
    route53:
      command: create
      zone: aws.fale.io
      record: '{{ item.tagged_instances.0.tags.Name }}'
      type: A
      ttl: 1
      value: '{{ item.tagged_instances.0.public_ip }}'
      wait: True
    with_items: '{{ aws_simple_instances.results }}'
    when: item.tagged_instances.0.public_ip
  - name: Add internal route53 rules for instances
    route53:
      command: create
      zone: aws.fale.io
      private_zone: True
      record: '{{ item.tagged_instances.0.tags.Name }}'
      type: A
      ttl: 1
      value: '{{ item.tagged_instances.0.private_ip }}'
      wait: True
    with_items: '{{ aws_simple_instances.results }}'
